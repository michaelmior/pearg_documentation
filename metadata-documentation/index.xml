<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Metadata Documentation on PEARG Documentation</title>
    <link>https://pearg.github.io/pearg_documentation/metadata-documentation/</link>
    <description>Recent content in Metadata Documentation on PEARG Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://pearg.github.io/pearg_documentation/metadata-documentation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Metadata Overview</title>
      <link>https://pearg.github.io/pearg_documentation/metadata-documentation/metadata-overview/</link>
      <pubDate>Tue, 15 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pearg.github.io/pearg_documentation/metadata-documentation/metadata-overview/</guid>
      <description>The Hoffmann Lab has a system for storing its raw sequencing data. It is important you follow the system in place and ensure all your data is properly labelled and backed up. This is to ensure that sequencing data generated at the present time can still be used in future analyses, even if you are no longer at the lab. Storing our next-generation sequencing data in a systematic manner also benefits the whole lab as other lab members can find and use data that could be beneficial to their project.</description>
    </item>
    
    <item>
      <title>Using Mediaflux</title>
      <link>https://pearg.github.io/pearg_documentation/metadata-documentation/using-mediaflux/</link>
      <pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pearg.github.io/pearg_documentation/metadata-documentation/using-mediaflux/</guid>
      <description>The documents below cover the basics of using Mediaflux to create assets, set metadata and upload your data.
 1. Mediaflux Introduction
 How to log into Mediaflux Desktop What assets are stored in data/, individuals/, and libraries/ Metadata associated with assets   2. Adding Individual Assets
 Creating assets in individuals/ Setting sample metadata Modifying and deleting existing assets Using metadata templates  Alternatively, you can import individual assets using an Excel Spreadsheet</description>
    </item>
    
    <item>
      <title>Mediaflux Explorer</title>
      <link>https://pearg.github.io/pearg_documentation/metadata-documentation/mediaflux-explorer/</link>
      <pubDate>Tue, 15 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pearg.github.io/pearg_documentation/metadata-documentation/mediaflux-explorer/</guid>
      <description>This page has been deprecated. To use Mediaflux Explorer on the mozzie server, start a VNC session, launch a terminal, and enter mediaflux-explorer to launch the application.
 The Mediaflux service can be accessed via a Java applet (Mediaflux Explorer) or via your web browser with Mediaflux Desktop. These clients allow you to view your data, transfer data, and edit metadata.
The Mediaflux Explorer Java applet should be used when transferring data and is available on both mozzie and rescue servers.</description>
    </item>
    
    <item>
      <title>Sample Map</title>
      <link>https://pearg.github.io/pearg_documentation/metadata-documentation/sample-map/</link>
      <pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://pearg.github.io/pearg_documentation/metadata-documentation/sample-map/</guid>
      <description>Enter the password to view the interactive map of the sample data in the Hoffmann Lab Mediaflux project.
Enter    &#34;use strict&#34;; function loadPage(pwd) { var hash = pwd; hash = Sha1.hash(pwd); var url = &#34;http://45.113.235.8/secret/&#34; + hash + &#34;/sample_map.html&#34;; window.open(url, &#39;_blank&#39;); } $(&#34;#loginbutton&#34;).on(&#34;click&#34;, function() { loadPage($(&#34;#password&#34;).val()); }); $(&#34;#password&#34;).keypress(function(e) { if (e.which == 13) { loadPage($(&#34;#password&#34;).val()); } }); $(&#34;#password&#34;).focus(); $(document).ready(function() { $(&#34;#loginbutton&#34;).hover(function() { $(this).css(&#34;background-color&#34;, &#34;#2E53A5&#34;); }, function() { $(this).</description>
    </item>
    
    <item>
      <title>Adding individuals to Mediaflux via Excel spreadsheet</title>
      <link>https://pearg.github.io/pearg_documentation/metadata-documentation/using-mediaflux/xlsx_individual_import/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://pearg.github.io/pearg_documentation/metadata-documentation/using-mediaflux/xlsx_individual_import/</guid>
      <description>If you prefer, you can choose to add the sample individuals component of your sequencing metadata via Excel spreadsheet instead of using the Mediaflux GUI.
This step requires a few steps:
  Download the template for individual samples here.
  Fill in the Excel spreadsheet with the information from your sequencing library.
  Send the spreadsheet to Jessica at jchung@unimelb.edu.au
  There might be some back and forth communication in order for the data to be validated.</description>
    </item>
    
    <item>
      <title>Using sFTP with Mediaflux</title>
      <link>https://pearg.github.io/pearg_documentation/metadata-documentation/using-mediaflux/mediaflux-sftp/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pearg.github.io/pearg_documentation/metadata-documentation/using-mediaflux/mediaflux-sftp/</guid>
      <description>Command line sFTP If you want to transfer files between the PEARG servers (e.g. mozzie) and Mediaflux, the easiest way to do this is to use sFTP on the command line.
If you&amp;rsquo;re transferring large files, I recommend you use sFTP in a screen session so you can detach it and leave it running in the background.
Downloading files from Mediaflux Let&amp;rsquo;s say I&amp;rsquo;m interested in a particular tarball which is located at /Volumes/proj-hoffmann_data-1128.</description>
    </item>
    
  </channel>
</rss>
